name: Build

on:
  push:
    branches: [ "main", "release" ]
  pull_request:
    branches: [ "main", "release" ]

jobs:
  version:
    runs-on: ubuntu-latest
    outputs:
      version: ${{ steps.gitversion.outputs.semVer }}
      versionCode: ${{ steps.run_number.outputs.versionCode }}
    steps:
    - uses: actions/checkout@v3
      with:
        fetch-depth: 0
    - name: Install GitVersion
      uses: gittools/actions/gitversion/setup@v0.9.6
      with:
        versionSpec: '5.x'
    - name: Use GitVersion
      id: gitversion # step id used as reference for output values
      uses: gittools/actions/gitversion/execute@v0.9.6
      with:
        useConfigFile: true
        configFilePath: ./GitVersion.yml
    - name: Display SemVer
      run: |
        echo "SemVer: ${{ steps.gitversion.outputs.semVer }}"
  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - name: set up JDK 11
      uses: actions/setup-java@v3
      with:
        java-version: '11'
        distribution: 'temurin'
        cache: gradle

    - uses: subosito/flutter-action@v2
      with:
        flutter-version: '3.19.0'
    - run: flutter pub get
      working-directory: ./fireapp
    - run: dart run environment_config:generate
      working-directory: ./fireapp
    - run: flutter pub run build_runner build
      working-directory: ./fireapp
    - run: flutter gen-l10n
      working-directory: ./fireapp
    - run: flutter build apk
      working-directory: ./fireapp
    - uses: actions/upload-artifact@master
      with:
        name: ${{github.run_number}}-apk
        path: ./fireapp/build/app/outputs/flutter-apk/app-release.apk

      
      
  publish-pre:
    needs:
      - build
      - version
    if: ${{ github.ref == 'refs/heads/main' }}
    runs-on: ubuntu-latest

    steps:
      - name: Get current date
        id: date
        run: echo "::set-output name=date::$(date +'%Y-%m-%d')"
      - uses: actions/download-artifact@master
        with:
          name: ${{github.run_number}}-apk
          path: ./fireapp/build/app/outputs/flutter-apk/
      - name: release
        uses: actions/create-release@v1
        id: create_release
        with:
          draft: false
          prerelease: true
          release_name: Prerelease ${{ needs.version.outputs.version }}
          tag_name: v${{ needs.version.outputs.version }}
        env:
          GITHUB_TOKEN: ${{ github.token }}
      - name: upload artifact
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ github.token }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./fireapp/build/app/outputs/flutter-apk/app-release.apk
          asset_name: app-debug.apk
          asset_content_type: application/vnd.android.package-archive
  publish-release:
    needs:
      - build
      - version
    if: ${{ github.ref == 'refs/heads/release' }}
    runs-on: ubuntu-latest

    steps:
      - name: Get current date
        id: date
        run: echo "::set-output name=date::$(date +'%Y-%m-%d')"
      - uses: actions/download-artifact@master
        with:
          name: ${{github.run_number}}-apk
          path: ./fireapp/build/app/outputs/flutter-apk/
      - name: release
        uses: actions/create-release@v1
        id: create_release
        with:
          draft: false
          prerelease: false
          release_name: Release ${{ needs.version.outputs.version }}
          tag_name: v${{ needs.version.outputs.version }}
        env:
          GITHUB_TOKEN: ${{ github.token }}
      - name: upload artifact
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ github.token }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./fireapp/build/app/outputs/flutter-apk/app-release.apk
          asset_name: app-release.apk
          asset_content_type: application/vnd.android.package-archive
